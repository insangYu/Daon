<!doctype html>
<!-- 닉네임 바꾸는 칸, 접속시 오른쪽 화면에 접속자 목록 추가-->
<html>
  <head>


    <% include ../partials/head %>
    

    <title>Socket.IO chat</title>
      <style>
      * { margin: 0; padding: 0; box-sizing: border-box; }
       /* form { background: #000; padding: 3px; position: fixed; bottom: 0; width: 100%; } */
       form input { border: 0; padding: 10px; width: 90%; margin-right: .5%; } 
       /* form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; }  */
       /* .pages { height: 100%; margin: 0; padding: 0; width: 100%;} */ *
       /* .page { height: 100%; position: absolute; width: 100%;} */
        /* .login.page .form{ 
        height: 100px; margin-top: -100px; position: absolute;
        text-align: center; top: 50%; width: 100%;
      }  */
      .login.page {
        background-color: none;
      }
      .chatArea {width:100%;}
      .pages{border-style:solid; background-color:white; border-color:gray; border-radius: 10px;
       border-width:thick; width:50%; list-style:none;}
      #messagesTable {width:70%;}
      #userTable {width:30%; background-color: white;}
      #users #messages {list-style-type: none; margin:0; padding:0;}
      #messages li {border-style:solid;  background-color:#f8b068; border-color:white; border-radius: 200px;
        padding: 20px 20px; list-style:none; width:60%; margin: 10px 0px 10px 200px; border-width:thick;}
      #messages li:nth-child(odd) { background:white; margin: 10px 200px 10px 0px;
      border-color:white; border-width:thick; background-color:rgb(223, 223, 223);}
 
    </style>
  </head>
  <body>
    <center>
    <% include ../partials/nav %>
    <% include ../partials/chatnav %>

    <section class="ftco-section ftco-no-pt ftc-no-pb">
      <div class="container" style="margin:50px 0 50px 0;">
        
    <ul class="pages">
      <li class = "chat page">
        <div class="userList" style="margin-top:17px;">
          <h2>현재 접속자</h2>
          <ul id="userList"></ul>
        </div>
 
        <hr>
        <ul id="messages"></ul>
        
      </li>
 
      <li class="login page">
        <div class="form">
          <h4 class="title">사용자이름을 입력해주세요.<br></h4>
          <input class="usernameInput" type="text" autofocus/>     Enter를 눌러주세요
        </div>
      </li>
  
 
         <form style="width :90%; height: 150px; margin-top:10px;">
            <input id="m" autocomplete="off" >
         </form>
      
    </ul>
    </div>
    </section>
 
    <script src="/socket.io/socket.io.js"></script>
    <script src="http://code.jquery.com/jquery-1.11.1.js"></script>
    <script>
 
      var COLORS = [
        '#e21400', '#91580f', '#f8a700', '#f78b00',
        '#58dc00', '#287b00', '#a8f07a', '#4ae8c4',
        '#3b88eb', '#3824aa', '#a700ff', '#d300e7'
      ];
 
      var $window = $(window);
      var loginPage = $('.login.page');
      var chatPage = $('.chat.page');
 
      var username;
 
      var socket = io();
 
      function setName(){
  username = $('.usernameInput').val();
  if(username){
    loginPage.fadeOut();
    chatPage.show();
    loginPage.off('click');

    socket.emit('add user',username);
  }
} //처음 이름 설정시
 
      function getColor(username){
        var hash = 7;
        for (var i = 0; i < username.length; i++) {
           hash = username.charCodeAt(i) + (hash << 5) - hash;
        }
        var index = Math.abs(hash % COLORS.length);
        return COLORS[index];
      }// 이름에 색칠 정해주기
 
      function userListUpdate(userlist){
        $('#userList').text('');
        var str='';
        for(var i=0; i<userlist.length; i++){
          if(i==(userlist.length-1))
            {str+= userlist[i];}
          else
            {str += userlist[i]+', ';}
        }
        $('#userList').text(str);
      }
 
      $window.keydown(function(event){
        if(event.which == 13){
          if(username){
            /* sendMessage();
            socket.emit('stop typing');
            typing = false; */
          }else{
            setName();
          }
        }
      });//엔터를 누를시
 
      $('form').submit(function(){
        if($('#m').val()[0]=='/'){
            if($('#m').val()[1]=='c'){
              socket.emit('change nickname',$('#m').val().substring(3));
            }
            else if($('#m').val()[1]=='w'){
              var newmsg = $('#m').val().substring(3);
              var index = newmsg.indexOf(' ');
              var to = newmsg.substring(0,index);
              var msg = newmsg.substring(index+1,newmsg.length);
              socket.emit('whisper',{
                To:to,
                Msg:msg
              });
            }
        }
        else{
        socket.emit('chat message', $('#m').val());
        $('#m').val('');
        }
        return false;
      });// client에서 server로 msg 전송
 
      socket.on('new nickname', function(data){
        $('#messages').append($('<li class="noti">').text(data.pastname + '님이 ' +data.newname+'으로 닉네임을 변경하였습니다.' ));
        userListUpdate(data.userlist);
      });
 
      socket.on('chat message', function(data){
        var span = $('<span class="nickname">').text(data.username).css('color', getColor(data.username)).append(' : ');
        var li = $('<li>').append(span).append(data.message);
        $('#messages').append(li);
      }); //chat 내용을 채팅창에 출력
 
      socket.on('user joined', function(data){
        $('#messages').append($('<li class="noti">').text(data.username + '님이 입장하셨습니다'));
        userListUpdate(data.userlist);
      });
 
      socket.on('new people',function(data){
        $('#messages').append($('<li class="noti">').text(data.username + '님이 입장하셨습니다'));
        userListUpdate(data.userlist);
      });
 
      socket.on('user logout',function(data){
        $('#messages').append($('<li class="noti">').text(data.username + '님이 퇴장하셨습니다'));
        userListUpdate(data.userlist);
      });
 
    </script>
    
  </center>
  <% include ../partials/footer %> 
  </body>
</html>
